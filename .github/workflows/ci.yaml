#           Running workflow depending on user
name: User filter
run-name: ${{ github.actor }}
on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
          matrix:
            python-version: ["3.9", "3.10", "3.11"]
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4

      with:
        python-version: ${{ matrix.python-version }}

    - name: User in the Team
      if: ${{ github.actor == 'Ghenadie27' }} or ${{ github.actor == 'Marina277' }}
      run: |
        echo "Actor is from the Team"
        python -m pip install --upgrade pip
        pip install ruff pytest
        # if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        # stop the build if there are Python syntax errors or undefined names
        ruff --format=github --select=E9,F63,F7,F82 --target-version=py37 .
        # default set of ruff rules with GitHub Annotations
        ruff --format=github --target-version=py37 .



        

#           Checking a change into a directory

#name: Paths Filter
#run-name: ${{ github.actor }} is learning GitHub Actions
#on: [push]
#
#jobs:
#  paths-filter:
#    runs-on: ubuntu-latest
#    outputs:
#      output1: ${{ steps.filter.outputs.workflows }}
#    strategy:
#          matrix:
#            python-version: ["3.9", "3.10", "3.11"]
#    steps:
#    - uses: actions/checkout@v3
#    - uses: actions/setup-python@v4
#    - uses: dorny/paths-filter@v2
#      id: filter
#      with:
#        filters: |
#          workflows:
#            - '.github/workflows/**'
#    # run only if 'workflows' files were changed
#    - name: workflow tests
#      if: steps.filter.outputs.workflows == 'true'
#      run: echo "Workflow file"
#
#    # run only if not 'workflows' files were changed
#    - name: not workflow tests
#      if: steps.filter.outputs.workflows != 'true'
##      with:
##        python-version: ${{ matrix.python-version }}
#      run: |
#        echo "NOT workflow file"
#        python -m pip install --upgrade pip
#        pip install ruff pytest
#        # if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
#        # stop the build if there are Python syntax errors or undefined names
#        ruff --format=github --select=E9,F63,F7,F82 --target-version=py37 .
#        # default set of ruff rules with GitHub Annotations
#        ruff --format=github --target-version=py37 .



#    - name: Checkout@v3
#      uses: actions/checkout@v3
#    - name: Set up Python ${{ matrix.python-version }}
#      uses: actions/setup-python@v4
#    - name: Set up Python ${{ matrix.python-version }}
#      uses: actions/setup-python@v4
#      with:
#        python-version: ${{ matrix.python-version }}
#    - name: Install dependencies
#      run: |
#        python -m pip install --upgrade pip
#        pip install ruff pytest
#        # if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
#    - name: Lint with ruff
#      run: |
#        # stop the build if there are Python syntax errors or undefined names
#        ruff --format=github --select=E9,F63,F7,F82 --target-version=py37 .
#        # default set of ruff rules with GitHub Annotations
#        ruff --format=github --target-version=py37 .
    


#name: Ghena CI
#on:
#  push:
#    #- 'project1/subproject1/**/*'
#    #paths-ignore:
#      #- "venv/**"
#jobs:
#  build:
#    name: python test
#    runs-on: ubuntu-latest
#    outputs:
#      output1: ${{ steps.filter.outputs.workflows }}
#    strategy:
#      matrix:
#        python-version: ["3.9", "3.10", "3.11"]
#    steps:
#      - uses: actions/checkout@v2
#      - name: Check filter
#        uses: dorny/paths-filter@v2
#        id: changes
#        with:
#           filters: |
#              src:
#                - '.github/**'
#        # run only if 'workflows' files were changed
#      - name: workflow tests
#        if: steps.changes.outputs.src == 'true'
#        run: echo "Workflow file"
#      - uses: actions/checkout@v3
#      - name: Set up Python ${{ matrix.python-version }}
#        uses: actions/setup-python@v4
#        with:
#          python-version: ${{ matrix.python-version }}
#
#      - name: Install dependencies
#        run: |
#          python -m pip install --upgrade pip
#          pip install ruff pytest
#          # if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
#      - name: Lint with ruff
#        run: |
#          # stop the build if there are Python syntax errors or undefined names
#          ruff --format=github --select=E9,F63,F7,F82 --target-version=py37 .
#          # default set of ruff rules with GitHub Annotations
#          ruff --format=github --target-version=py37 .
#      - name: Test with pytest
#        run: |
#          pytest
#      # run only if not 'workflows' files were changed
#      - name: not workflow tests
#        if: steps.filter.outputs.workflows != 'true'
#        run: echo "NOT workflow file"
